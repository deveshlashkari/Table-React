import React from 'react';
import { shallow } from 'enzyme';
import DataTable from './DataTable';

import '../setupTests';

it('renders rows based on provided columns in the table', () => {
    const cols = [
        { header: 'ID', name: 'id' },
        { header: 'Name', name: 'name' },
        { header: 'Email', name: 'email' },
    ];

    const data = [
        { id: 1, name: 'Abraham', email: 'abraham@abc.com' },
        { id: 2, name: 'Vicky', email: 'vicky@qwe.com' },
        { id: 3, name: 'Granny', email: 'granny@xyz.com', someNew: 'nothing' },
        { id: 4, name: 'Granny', email: 'granny@xyz.com' },
        { id: 5, name: 'Granny', email: 'granny@xyz.com', someNew: 'anything' },
    ];


    const container = shallow(<DataTable data={data} cols={cols} />);

    const table = container.find('table');
    expect(table).toHaveLength(1);

    const thead = table.find('thead');
    expect(thead).toHaveLength(1);

    const headers = thead.find('th');
    expect(headers).toHaveLength(cols.length);

    headers.forEach((th, idx) => {
        expect(th.text()).toEqual(cols[idx].header);
    });

    const tbody = table.find('tbody');
    expect(tbody).toHaveLength(1);

    const rows = tbody.find('tr');
    expect(rows).toHaveLength(data.length);

    rows.forEach((tr, idx) => {
        const cells = tr.find('td');
        expect(cells).toHaveLength(cols.length);

        // expect(cells.at(0).text()).toEqual(data[idx].id);
        // expect(cells.at(1).text()).toEqual(data[idx].name);
        // expect(cells.at(2).text()).toEqual(data[idx].email);
    })
})